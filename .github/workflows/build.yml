name: Build Application and Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-jar:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3.1.0

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle Wrapper
        run: cd timer-management-system && ./gradlew build

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: timer-management-system/build/libs/*.jar

  build-node:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: cd timer-ui && npm install

      - name: Build
        run: cd timer-ui && npm run build

      - name: Upload Node.js build
        uses: actions/upload-artifact@v4
        with:
          name: app-node
          path: timer-ui/dist

  build-docker:
    needs: [ build-jar, build-node ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  # This is necessary to publish to GHCR

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: timer-management-system/build/libs

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: app-node
          path: timer-ui/dist

      - name: Build Docker image
        run: docker compose -f docker-compose-build.yml build

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set repository owner lowercase
        id: repo_owner
        run: echo "OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Tag Docker image
        run: |
          docker tag timer-management-system:latest ghcr.io/${{ env.OWNER_LOWER }}/timer-management-system:latest
          docker tag timer-ui:latest ghcr.io/${{ env.OWNER_LOWER }}/timer-ui:latest
          docker tag timer-db:latest ghcr.io/${{ env.OWNER_LOWER }}/timer-db:latest

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ env.OWNER_LOWER }}/timer-management-system:latest
          docker push ghcr.io/${{ env.OWNER_LOWER }}/timer-ui:latest
          docker push ghcr.io/${{ env.OWNER_LOWER }}/timer-db:latest